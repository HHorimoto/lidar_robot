<?xml version="1.0"?>
<launch>
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="model" default="robot" />
    <arg name="model_path" default="$(find lidar_robot_model)/urdf/robots/$(arg model).urdf.xacro" />
    <arg name="world" default="small" />
    <arg name="world_path" default="$(find lidar_robot_gazebo)/worlds/$(arg world).world" />
    <arg name="rviz" default="simple" />
    <arg name="rviz_path" default="$(find lidar_robot_gazebo)/config/$(arg rviz).rviz" />
    <arg name="paused" default="false" />
    <arg name="use_sim_time" default="true" />
    <arg name="headless" default="false" />
    <arg name="debug" default="false" />

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_path)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)" />
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot/robot_description" command="$(find xacro)/xacro --inorder '$(arg model_path)'" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot -param robot/robot_description" />

    <!-- ros_control motoman launch file -->
    <include file="$(find lidar_robot_control)/launch/robot_control.launch" />

    <!-- run rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_path)" required="true" />
</launch>